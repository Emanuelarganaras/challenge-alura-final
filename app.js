// El principal objetivo de este desaf칤o es fortalecer tus habilidades en l칩gica de programaci칩n. Aqu칤 deber치s desarrollar la l칩gica para resolver el problema.

// Arreglo para almacenar los nombres de los amigos
function agregarAmigo(){
    let ingreso = document.getElementById("amigo");

    let valor = ingreso.value;

// Validaci칩n: Si el campo est치 vac칤o, muestra una alerta y detiene la funci칩n
    if (valor === "") {
        alert("Ingresa un nombre valido");
        return;
    
    }

    // Agrega el nombre al arreglo de amigos
    amigos.push(valor);

    // Limpia el campo de texto
    ingreso.value = "";

    // Llama a la funci칩n para mostrar la lista actualizada
    mostrarAmigos();


}

// Funci칩n para mostrar la lista de amigos en la p치gina
function mostrarAmigos(){
    let lista = document.getElementById("listaAmigos");


// Limpia la lista en el HTML para evitar duplicados
    lista.innerHTML = "";

// Bucle para recorrer el arreglo de amigos
     for (let i = 0; i < amigos.length; i++) {
 // Agrega cada amigo como un elemento de lista (<li>) al HTML
        lista.innerHTML += "<li>" + amigos [i] + "</li>";
    }
    
}

// Funci칩n para sortear un amigo de la lista
function sortearAmigo() {
// Validaci칩n: Si la lista est치 vac칤a, muestra una alerta y detiene la funci칩n
    if (amigos.length === 0) {
        alert("No hay opciones disponibles"); 
        return; 
    }
// Genera un 칤ndice aleatorio basado en la cantidad de amigos
let indiceAleatorio = Math.floor(Math.random() * amigos.length);
// Usa el 칤ndice aleatorio para seleccionar un amigo del arreglo
let seleccionado = amigos[indiceAleatorio];
// Obtiene el elemento del HTML donde se mostrar치 el resultado
let resultado = document.getElementById("resultado");
// Muestra el nombre del amigo sorteado en la p치gina
resultado.innerHTML = "<li>游꿀 Amigo seleccionado: " + seleccionado + "</li>";
    
}